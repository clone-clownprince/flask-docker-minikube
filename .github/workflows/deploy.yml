name: Deploy to Kubernetes

on:
  push:
    branches:
      - main  # Trigger the workflow on pushes to the main branch
  pull_request:
    branches:
      - main  # Trigger the workflow for pull requests to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/flask-app:${{ github.sha }} .
        docker push ${{ secrets.DOCKER_USERNAME }}/flask-app:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Decode and set up the kubeconfig
      - name: Decode Kubeconfig and set it up
        run: |
          # Create the .kube directory if it doesn't exist
          mkdir -p ~/.kube
          
          # Decode the kubeconfig secret and write it to ~/.kube/config
          echo "$KUBE_CONFIG" | base64 -d > ~/.kube/config

      # Ensure Minikube is installed and the environment is set up
      - name: Install Minikube
        run: |
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          chmod +x minikube
          sudo mv minikube /usr/local/bin/

      # Start Minikube (use the correct driver if needed)
      - name: Start Minikube
        run: |
          minikube start

      # Set Kubeconfig path for Minikube (if using Minikube)
      - name: Set Minikube Kubeconfig
        run: |
          # Set the correct Kubeconfig for Minikube
          echo "$(minikube -p minikube kubeconfig)" > ~/.kube/config

      # Verify the kubeconfig and kubectl configuration
      - name: Verify kubectl configuration
        run: |
          kubectl config view
          kubectl get nodes

      # Update Kubernetes Deployment with new Docker image
      - name: Update Kubernetes Deployment
        run: |
          kubectl set image deployment/flask-app-deployment flask-app=${{ secrets.DOCKER_USERNAME }}/flask-app:${{ github.sha }}
          kubectl rollout status deployment/flask-app-deployment
